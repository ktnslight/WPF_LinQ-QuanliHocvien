#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLHV
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_QLHV")]
	public partial class DataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBIENLAI(BIENLAI instance);
    partial void UpdateBIENLAI(BIENLAI instance);
    partial void DeleteBIENLAI(BIENLAI instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    partial void InsertCAUHOI(CAUHOI instance);
    partial void UpdateCAUHOI(CAUHOI instance);
    partial void DeleteCAUHOI(CAUHOI instance);
    partial void InsertDAPAN(DAPAN instance);
    partial void UpdateDAPAN(DAPAN instance);
    partial void DeleteDAPAN(DAPAN instance);
    partial void InsertDETHI(DETHI instance);
    partial void UpdateDETHI(DETHI instance);
    partial void DeleteDETHI(DETHI instance);
    partial void InsertGIAOVIEN(GIAOVIEN instance);
    partial void UpdateGIAOVIEN(GIAOVIEN instance);
    partial void DeleteGIAOVIEN(GIAOVIEN instance);
    partial void InsertKETQUA(KETQUA instance);
    partial void UpdateKETQUA(KETQUA instance);
    partial void DeleteKETQUA(KETQUA instance);
    partial void InsertKHOAHOC(KHOAHOC instance);
    partial void UpdateKHOAHOC(KHOAHOC instance);
    partial void DeleteKHOAHOC(KHOAHOC instance);
    partial void InsertKITHI(KITHI instance);
    partial void UpdateKITHI(KITHI instance);
    partial void DeleteKITHI(KITHI instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertNGUOIDUNG(NGUOIDUNG instance);
    partial void UpdateNGUOIDUNG(NGUOIDUNG instance);
    partial void DeleteNGUOIDUNG(NGUOIDUNG instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertHOCVIEN(HOCVIEN instance);
    partial void UpdateHOCVIEN(HOCVIEN instance);
    partial void DeleteHOCVIEN(HOCVIEN instance);
    #endregion
		
		public DataDataContext() : 
				base(global::QLHV.Properties.Settings.Default.DB_QLHVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BIENLAI> BIENLAIs
		{
			get
			{
				return this.GetTable<BIENLAI>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
		
		public System.Data.Linq.Table<CAUHOI> CAUHOIs
		{
			get
			{
				return this.GetTable<CAUHOI>();
			}
		}
		
		public System.Data.Linq.Table<DAPAN> DAPANs
		{
			get
			{
				return this.GetTable<DAPAN>();
			}
		}
		
		public System.Data.Linq.Table<DETHI> DETHIs
		{
			get
			{
				return this.GetTable<DETHI>();
			}
		}
		
		public System.Data.Linq.Table<GIAOVIEN> GIAOVIENs
		{
			get
			{
				return this.GetTable<GIAOVIEN>();
			}
		}
		
		public System.Data.Linq.Table<KETQUA> KETQUAs
		{
			get
			{
				return this.GetTable<KETQUA>();
			}
		}
		
		public System.Data.Linq.Table<KHOAHOC> KHOAHOCs
		{
			get
			{
				return this.GetTable<KHOAHOC>();
			}
		}
		
		public System.Data.Linq.Table<KITHI> KITHIs
		{
			get
			{
				return this.GetTable<KITHI>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this.GetTable<NGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<HOCVIEN> HOCVIENs
		{
			get
			{
				return this.GetTable<HOCVIEN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BIENLAI")]
	public partial class BIENLAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_BL;
		
		private System.DateTime _NGAYBL;
		
		private string _NOIDUNG;
		
		private int _SOTIEN;
		
		private string _ID_HV;
		
		private EntityRef<HOCVIEN> _HOCVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BLChanging(string value);
    partial void OnID_BLChanged();
    partial void OnNGAYBLChanging(System.DateTime value);
    partial void OnNGAYBLChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnSOTIENChanging(int value);
    partial void OnSOTIENChanged();
    partial void OnID_HVChanging(string value);
    partial void OnID_HVChanged();
    #endregion
		
		public BIENLAI()
		{
			this._HOCVIEN = default(EntityRef<HOCVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BL", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_BL
		{
			get
			{
				return this._ID_BL;
			}
			set
			{
				if ((this._ID_BL != value))
				{
					this.OnID_BLChanging(value);
					this.SendPropertyChanging();
					this._ID_BL = value;
					this.SendPropertyChanged("ID_BL");
					this.OnID_BLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBL", DbType="Date NOT NULL")]
		public System.DateTime NGAYBL
		{
			get
			{
				return this._NGAYBL;
			}
			set
			{
				if ((this._NGAYBL != value))
				{
					this.OnNGAYBLChanging(value);
					this.SendPropertyChanging();
					this._NGAYBL = value;
					this.SendPropertyChanged("NGAYBL");
					this.OnNGAYBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIEN", DbType="Int NOT NULL")]
		public int SOTIEN
		{
			get
			{
				return this._SOTIEN;
			}
			set
			{
				if ((this._SOTIEN != value))
				{
					this.OnSOTIENChanging(value);
					this.SendPropertyChanging();
					this._SOTIEN = value;
					this.SendPropertyChanged("SOTIEN");
					this.OnSOTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_HV
		{
			get
			{
				return this._ID_HV;
			}
			set
			{
				if ((this._ID_HV != value))
				{
					if (this._HOCVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HVChanging(value);
					this.SendPropertyChanging();
					this._ID_HV = value;
					this.SendPropertyChanged("ID_HV");
					this.OnID_HVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_BIENLAI", Storage="_HOCVIEN", ThisKey="ID_HV", OtherKey="ID_HV", IsForeignKey=true)]
		public HOCVIEN HOCVIEN
		{
			get
			{
				return this._HOCVIEN.Entity;
			}
			set
			{
				HOCVIEN previousValue = this._HOCVIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOCVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCVIEN.Entity = null;
						previousValue.BIENLAIs.Remove(this);
					}
					this._HOCVIEN.Entity = value;
					if ((value != null))
					{
						value.BIENLAIs.Add(this);
						this._ID_HV = value.ID_HV;
					}
					else
					{
						this._ID_HV = default(string);
					}
					this.SendPropertyChanged("HOCVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_P;
		
		private string _TENPHONG;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PChanging(string value);
    partial void OnID_PChanged();
    partial void OnTENPHONGChanging(string value);
    partial void OnTENPHONGChanged();
    #endregion
		
		public PHONG()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_P", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_P
		{
			get
			{
				return this._ID_P;
			}
			set
			{
				if ((this._ID_P != value))
				{
					this.OnID_PChanging(value);
					this.SendPropertyChanging();
					this._ID_P = value;
					this.SendPropertyChanged("ID_P");
					this.OnID_PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHONG", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENPHONG
		{
			get
			{
				return this._TENPHONG;
			}
			set
			{
				if ((this._TENPHONG != value))
				{
					this.OnTENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHONG = value;
					this.SendPropertyChanged("TENPHONG");
					this.OnTENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_LOP", Storage="_LOPs", ThisKey="ID_P", OtherKey="ID_P")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAUHOI")]
	public partial class CAUHOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Q;
		
		private string _ID_DT;
		
		private string _CAUHOI1;
		
		private EntitySet<DAPAN> _DAPANs;
		
		private EntityRef<DETHI> _DETHI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_QChanging(string value);
    partial void OnID_QChanged();
    partial void OnID_DTChanging(string value);
    partial void OnID_DTChanged();
    partial void OnCAUHOI1Changing(string value);
    partial void OnCAUHOI1Changed();
    #endregion
		
		public CAUHOI()
		{
			this._DAPANs = new EntitySet<DAPAN>(new Action<DAPAN>(this.attach_DAPANs), new Action<DAPAN>(this.detach_DAPANs));
			this._DETHI = default(EntityRef<DETHI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Q", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Q
		{
			get
			{
				return this._ID_Q;
			}
			set
			{
				if ((this._ID_Q != value))
				{
					this.OnID_QChanging(value);
					this.SendPropertyChanging();
					this._ID_Q = value;
					this.SendPropertyChanged("ID_Q");
					this.OnID_QChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_DT
		{
			get
			{
				return this._ID_DT;
			}
			set
			{
				if ((this._ID_DT != value))
				{
					if (this._DETHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DTChanging(value);
					this.SendPropertyChanging();
					this._ID_DT = value;
					this.SendPropertyChanged("ID_DT");
					this.OnID_DTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CAUHOI", Storage="_CAUHOI1", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CAUHOI1
		{
			get
			{
				return this._CAUHOI1;
			}
			set
			{
				if ((this._CAUHOI1 != value))
				{
					this.OnCAUHOI1Changing(value);
					this.SendPropertyChanging();
					this._CAUHOI1 = value;
					this.SendPropertyChanged("CAUHOI1");
					this.OnCAUHOI1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAUHOI_DAPAN", Storage="_DAPANs", ThisKey="ID_Q", OtherKey="ID_Q")]
		public EntitySet<DAPAN> DAPANs
		{
			get
			{
				return this._DAPANs;
			}
			set
			{
				this._DAPANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETHI_CAUHOI", Storage="_DETHI", ThisKey="ID_DT", OtherKey="ID_DT", IsForeignKey=true)]
		public DETHI DETHI
		{
			get
			{
				return this._DETHI.Entity;
			}
			set
			{
				DETHI previousValue = this._DETHI.Entity;
				if (((previousValue != value) 
							|| (this._DETHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DETHI.Entity = null;
						previousValue.CAUHOIs.Remove(this);
					}
					this._DETHI.Entity = value;
					if ((value != null))
					{
						value.CAUHOIs.Add(this);
						this._ID_DT = value.ID_DT;
					}
					else
					{
						this._ID_DT = default(string);
					}
					this.SendPropertyChanged("DETHI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAPANs(DAPAN entity)
		{
			this.SendPropertyChanging();
			entity.CAUHOI = this;
		}
		
		private void detach_DAPANs(DAPAN entity)
		{
			this.SendPropertyChanging();
			entity.CAUHOI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DAPAN")]
	public partial class DAPAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_A;
		
		private string _ID_Q;
		
		private string _DAPAN1;
		
		private bool _DA_DUNG;
		
		private EntityRef<CAUHOI> _CAUHOI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AChanging(string value);
    partial void OnID_AChanged();
    partial void OnID_QChanging(string value);
    partial void OnID_QChanged();
    partial void OnDAPAN1Changing(string value);
    partial void OnDAPAN1Changed();
    partial void OnDA_DUNGChanging(bool value);
    partial void OnDA_DUNGChanged();
    #endregion
		
		public DAPAN()
		{
			this._CAUHOI = default(EntityRef<CAUHOI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_A", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_A
		{
			get
			{
				return this._ID_A;
			}
			set
			{
				if ((this._ID_A != value))
				{
					this.OnID_AChanging(value);
					this.SendPropertyChanging();
					this._ID_A = value;
					this.SendPropertyChanged("ID_A");
					this.OnID_AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Q", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_Q
		{
			get
			{
				return this._ID_Q;
			}
			set
			{
				if ((this._ID_Q != value))
				{
					if (this._CAUHOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_QChanging(value);
					this.SendPropertyChanging();
					this._ID_Q = value;
					this.SendPropertyChanged("ID_Q");
					this.OnID_QChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DAPAN", Storage="_DAPAN1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DAPAN1
		{
			get
			{
				return this._DAPAN1;
			}
			set
			{
				if ((this._DAPAN1 != value))
				{
					this.OnDAPAN1Changing(value);
					this.SendPropertyChanging();
					this._DAPAN1 = value;
					this.SendPropertyChanged("DAPAN1");
					this.OnDAPAN1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DA_DUNG", DbType="Bit NOT NULL")]
		public bool DA_DUNG
		{
			get
			{
				return this._DA_DUNG;
			}
			set
			{
				if ((this._DA_DUNG != value))
				{
					this.OnDA_DUNGChanging(value);
					this.SendPropertyChanging();
					this._DA_DUNG = value;
					this.SendPropertyChanged("DA_DUNG");
					this.OnDA_DUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAUHOI_DAPAN", Storage="_CAUHOI", ThisKey="ID_Q", OtherKey="ID_Q", IsForeignKey=true)]
		public CAUHOI CAUHOI
		{
			get
			{
				return this._CAUHOI.Entity;
			}
			set
			{
				CAUHOI previousValue = this._CAUHOI.Entity;
				if (((previousValue != value) 
							|| (this._CAUHOI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAUHOI.Entity = null;
						previousValue.DAPANs.Remove(this);
					}
					this._CAUHOI.Entity = value;
					if ((value != null))
					{
						value.DAPANs.Add(this);
						this._ID_Q = value.ID_Q;
					}
					else
					{
						this._ID_Q = default(string);
					}
					this.SendPropertyChanged("CAUHOI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETHI")]
	public partial class DETHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_DT;
		
		private string _MADE;
		
		private EntitySet<CAUHOI> _CAUHOIs;
		
		private EntitySet<KITHI> _KITHIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DTChanging(string value);
    partial void OnID_DTChanged();
    partial void OnMADEChanging(string value);
    partial void OnMADEChanged();
    #endregion
		
		public DETHI()
		{
			this._CAUHOIs = new EntitySet<CAUHOI>(new Action<CAUHOI>(this.attach_CAUHOIs), new Action<CAUHOI>(this.detach_CAUHOIs));
			this._KITHIs = new EntitySet<KITHI>(new Action<KITHI>(this.attach_KITHIs), new Action<KITHI>(this.detach_KITHIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DT", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_DT
		{
			get
			{
				return this._ID_DT;
			}
			set
			{
				if ((this._ID_DT != value))
				{
					this.OnID_DTChanging(value);
					this.SendPropertyChanging();
					this._ID_DT = value;
					this.SendPropertyChanged("ID_DT");
					this.OnID_DTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADE", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MADE
		{
			get
			{
				return this._MADE;
			}
			set
			{
				if ((this._MADE != value))
				{
					this.OnMADEChanging(value);
					this.SendPropertyChanging();
					this._MADE = value;
					this.SendPropertyChanged("MADE");
					this.OnMADEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETHI_CAUHOI", Storage="_CAUHOIs", ThisKey="ID_DT", OtherKey="ID_DT")]
		public EntitySet<CAUHOI> CAUHOIs
		{
			get
			{
				return this._CAUHOIs;
			}
			set
			{
				this._CAUHOIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETHI_KITHI", Storage="_KITHIs", ThisKey="ID_DT", OtherKey="ID_DT")]
		public EntitySet<KITHI> KITHIs
		{
			get
			{
				return this._KITHIs;
			}
			set
			{
				this._KITHIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CAUHOIs(CAUHOI entity)
		{
			this.SendPropertyChanging();
			entity.DETHI = this;
		}
		
		private void detach_CAUHOIs(CAUHOI entity)
		{
			this.SendPropertyChanging();
			entity.DETHI = null;
		}
		
		private void attach_KITHIs(KITHI entity)
		{
			this.SendPropertyChanging();
			entity.DETHI = this;
		}
		
		private void detach_KITHIs(KITHI entity)
		{
			this.SendPropertyChanging();
			entity.DETHI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAOVIEN")]
	public partial class GIAOVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_GV;
		
		private string _HOTENGV;
		
		private System.DateTime _NGAYSINH;
		
		private string _EMAIL;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GVChanging(string value);
    partial void OnID_GVChanged();
    partial void OnHOTENGVChanging(string value);
    partial void OnHOTENGVChanged();
    partial void OnNGAYSINHChanging(System.DateTime value);
    partial void OnNGAYSINHChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public GIAOVIEN()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_GV
		{
			get
			{
				return this._ID_GV;
			}
			set
			{
				if ((this._ID_GV != value))
				{
					this.OnID_GVChanging(value);
					this.SendPropertyChanging();
					this._ID_GV = value;
					this.SendPropertyChanged("ID_GV");
					this.OnID_GVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTENGV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HOTENGV
		{
			get
			{
				return this._HOTENGV;
			}
			set
			{
				if ((this._HOTENGV != value))
				{
					this.OnHOTENGVChanging(value);
					this.SendPropertyChanging();
					this._HOTENGV = value;
					this.SendPropertyChanged("HOTENGV");
					this.OnHOTENGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date NOT NULL")]
		public System.DateTime NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_LOP", Storage="_LOPs", ThisKey="ID_GV", OtherKey="ID_GV")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.GIAOVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KETQUA")]
	public partial class KETQUA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_KQ;
		
		private string _ID_HV;
		
		private string _ID_KT;
		
		private int _DIEM;
		
		private EntityRef<KITHI> _KITHI;
		
		private EntityRef<HOCVIEN> _HOCVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KQChanging(string value);
    partial void OnID_KQChanged();
    partial void OnID_HVChanging(string value);
    partial void OnID_HVChanged();
    partial void OnID_KTChanging(string value);
    partial void OnID_KTChanged();
    partial void OnDIEMChanging(int value);
    partial void OnDIEMChanged();
    #endregion
		
		public KETQUA()
		{
			this._KITHI = default(EntityRef<KITHI>);
			this._HOCVIEN = default(EntityRef<HOCVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KQ", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_KQ
		{
			get
			{
				return this._ID_KQ;
			}
			set
			{
				if ((this._ID_KQ != value))
				{
					this.OnID_KQChanging(value);
					this.SendPropertyChanging();
					this._ID_KQ = value;
					this.SendPropertyChanged("ID_KQ");
					this.OnID_KQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_HV
		{
			get
			{
				return this._ID_HV;
			}
			set
			{
				if ((this._ID_HV != value))
				{
					if (this._HOCVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HVChanging(value);
					this.SendPropertyChanging();
					this._ID_HV = value;
					this.SendPropertyChanged("ID_HV");
					this.OnID_HVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_KT
		{
			get
			{
				return this._ID_KT;
			}
			set
			{
				if ((this._ID_KT != value))
				{
					if (this._KITHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KTChanging(value);
					this.SendPropertyChanging();
					this._ID_KT = value;
					this.SendPropertyChanged("ID_KT");
					this.OnID_KTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEM", DbType="Int NOT NULL")]
		public int DIEM
		{
			get
			{
				return this._DIEM;
			}
			set
			{
				if ((this._DIEM != value))
				{
					this.OnDIEMChanging(value);
					this.SendPropertyChanging();
					this._DIEM = value;
					this.SendPropertyChanged("DIEM");
					this.OnDIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KITHI_KETQUA", Storage="_KITHI", ThisKey="ID_KT", OtherKey="ID_KT", IsForeignKey=true)]
		public KITHI KITHI
		{
			get
			{
				return this._KITHI.Entity;
			}
			set
			{
				KITHI previousValue = this._KITHI.Entity;
				if (((previousValue != value) 
							|| (this._KITHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KITHI.Entity = null;
						previousValue.KETQUAs.Remove(this);
					}
					this._KITHI.Entity = value;
					if ((value != null))
					{
						value.KETQUAs.Add(this);
						this._ID_KT = value.ID_KT;
					}
					else
					{
						this._ID_KT = default(string);
					}
					this.SendPropertyChanged("KITHI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_KETQUA", Storage="_HOCVIEN", ThisKey="ID_HV", OtherKey="ID_HV", IsForeignKey=true)]
		public HOCVIEN HOCVIEN
		{
			get
			{
				return this._HOCVIEN.Entity;
			}
			set
			{
				HOCVIEN previousValue = this._HOCVIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOCVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCVIEN.Entity = null;
						previousValue.KETQUAs.Remove(this);
					}
					this._HOCVIEN.Entity = value;
					if ((value != null))
					{
						value.KETQUAs.Add(this);
						this._ID_HV = value.ID_HV;
					}
					else
					{
						this._ID_HV = default(string);
					}
					this.SendPropertyChanged("HOCVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOAHOC")]
	public partial class KHOAHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_KHOA;
		
		private string _TENKHOAHOC;
		
		private System.DateTime _NGAYBD;
		
		private System.DateTime _NGAYKT;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KHOAChanging(string value);
    partial void OnID_KHOAChanged();
    partial void OnTENKHOAHOCChanging(string value);
    partial void OnTENKHOAHOCChanged();
    partial void OnNGAYBDChanging(System.DateTime value);
    partial void OnNGAYBDChanged();
    partial void OnNGAYKTChanging(System.DateTime value);
    partial void OnNGAYKTChanged();
    #endregion
		
		public KHOAHOC()
		{
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHOA", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_KHOA
		{
			get
			{
				return this._ID_KHOA;
			}
			set
			{
				if ((this._ID_KHOA != value))
				{
					this.OnID_KHOAChanging(value);
					this.SendPropertyChanging();
					this._ID_KHOA = value;
					this.SendPropertyChanged("ID_KHOA");
					this.OnID_KHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHOAHOC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENKHOAHOC
		{
			get
			{
				return this._TENKHOAHOC;
			}
			set
			{
				if ((this._TENKHOAHOC != value))
				{
					this.OnTENKHOAHOCChanging(value);
					this.SendPropertyChanging();
					this._TENKHOAHOC = value;
					this.SendPropertyChanged("TENKHOAHOC");
					this.OnTENKHOAHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBD", DbType="Date NOT NULL")]
		public System.DateTime NGAYBD
		{
			get
			{
				return this._NGAYBD;
			}
			set
			{
				if ((this._NGAYBD != value))
				{
					this.OnNGAYBDChanging(value);
					this.SendPropertyChanging();
					this._NGAYBD = value;
					this.SendPropertyChanged("NGAYBD");
					this.OnNGAYBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKT", DbType="Date NOT NULL")]
		public System.DateTime NGAYKT
		{
			get
			{
				return this._NGAYKT;
			}
			set
			{
				if ((this._NGAYKT != value))
				{
					this.OnNGAYKTChanging(value);
					this.SendPropertyChanging();
					this._NGAYKT = value;
					this.SendPropertyChanged("NGAYKT");
					this.OnNGAYKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_LOP", Storage="_LOPs", ThisKey="ID_KHOA", OtherKey="ID_KHOA")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOAHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KITHI")]
	public partial class KITHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_KT;
		
		private string _KITHI1;
		
		private string _ID_DT;
		
		private EntitySet<KETQUA> _KETQUAs;
		
		private EntityRef<DETHI> _DETHI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KTChanging(string value);
    partial void OnID_KTChanged();
    partial void OnKITHI1Changing(string value);
    partial void OnKITHI1Changed();
    partial void OnID_DTChanging(string value);
    partial void OnID_DTChanged();
    #endregion
		
		public KITHI()
		{
			this._KETQUAs = new EntitySet<KETQUA>(new Action<KETQUA>(this.attach_KETQUAs), new Action<KETQUA>(this.detach_KETQUAs));
			this._DETHI = default(EntityRef<DETHI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KT", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_KT
		{
			get
			{
				return this._ID_KT;
			}
			set
			{
				if ((this._ID_KT != value))
				{
					this.OnID_KTChanging(value);
					this.SendPropertyChanging();
					this._ID_KT = value;
					this.SendPropertyChanged("ID_KT");
					this.OnID_KTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="KITHI", Storage="_KITHI1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string KITHI1
		{
			get
			{
				return this._KITHI1;
			}
			set
			{
				if ((this._KITHI1 != value))
				{
					this.OnKITHI1Changing(value);
					this.SendPropertyChanging();
					this._KITHI1 = value;
					this.SendPropertyChanged("KITHI1");
					this.OnKITHI1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_DT
		{
			get
			{
				return this._ID_DT;
			}
			set
			{
				if ((this._ID_DT != value))
				{
					if (this._DETHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DTChanging(value);
					this.SendPropertyChanging();
					this._ID_DT = value;
					this.SendPropertyChanged("ID_DT");
					this.OnID_DTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KITHI_KETQUA", Storage="_KETQUAs", ThisKey="ID_KT", OtherKey="ID_KT")]
		public EntitySet<KETQUA> KETQUAs
		{
			get
			{
				return this._KETQUAs;
			}
			set
			{
				this._KETQUAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETHI_KITHI", Storage="_DETHI", ThisKey="ID_DT", OtherKey="ID_DT", IsForeignKey=true)]
		public DETHI DETHI
		{
			get
			{
				return this._DETHI.Entity;
			}
			set
			{
				DETHI previousValue = this._DETHI.Entity;
				if (((previousValue != value) 
							|| (this._DETHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DETHI.Entity = null;
						previousValue.KITHIs.Remove(this);
					}
					this._DETHI.Entity = value;
					if ((value != null))
					{
						value.KITHIs.Add(this);
						this._ID_DT = value.ID_DT;
					}
					else
					{
						this._ID_DT = default(string);
					}
					this.SendPropertyChanged("DETHI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.KITHI = this;
		}
		
		private void detach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.KITHI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_LOP;
		
		private string _TENLOP;
		
		private int _SOLUONG;
		
		private string _MOTA;
		
		private string _LICH;
		
		private string _ID_GV;
		
		private string _ID_KHOA;
		
		private string _ID_P;
		
		private EntitySet<HOCVIEN> _HOCVIENs;
		
		private EntityRef<GIAOVIEN> _GIAOVIEN;
		
		private EntityRef<PHONG> _PHONG;
		
		private EntityRef<KHOAHOC> _KHOAHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LOPChanging(string value);
    partial void OnID_LOPChanged();
    partial void OnTENLOPChanging(string value);
    partial void OnTENLOPChanged();
    partial void OnSOLUONGChanging(int value);
    partial void OnSOLUONGChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnLICHChanging(string value);
    partial void OnLICHChanged();
    partial void OnID_GVChanging(string value);
    partial void OnID_GVChanged();
    partial void OnID_KHOAChanging(string value);
    partial void OnID_KHOAChanged();
    partial void OnID_PChanging(string value);
    partial void OnID_PChanged();
    #endregion
		
		public LOP()
		{
			this._HOCVIENs = new EntitySet<HOCVIEN>(new Action<HOCVIEN>(this.attach_HOCVIENs), new Action<HOCVIEN>(this.detach_HOCVIENs));
			this._GIAOVIEN = default(EntityRef<GIAOVIEN>);
			this._PHONG = default(EntityRef<PHONG>);
			this._KHOAHOC = default(EntityRef<KHOAHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOP", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_LOP
		{
			get
			{
				return this._ID_LOP;
			}
			set
			{
				if ((this._ID_LOP != value))
				{
					this.OnID_LOPChanging(value);
					this.SendPropertyChanging();
					this._ID_LOP = value;
					this.SendPropertyChanged("ID_LOP");
					this.OnID_LOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOP", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENLOP
		{
			get
			{
				return this._TENLOP;
			}
			set
			{
				if ((this._TENLOP != value))
				{
					this.OnTENLOPChanging(value);
					this.SendPropertyChanging();
					this._TENLOP = value;
					this.SendPropertyChanged("TENLOP");
					this.OnTENLOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int NOT NULL")]
		public int SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(500)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LICH
		{
			get
			{
				return this._LICH;
			}
			set
			{
				if ((this._LICH != value))
				{
					this.OnLICHChanging(value);
					this.SendPropertyChanging();
					this._LICH = value;
					this.SendPropertyChanged("LICH");
					this.OnLICHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_GV
		{
			get
			{
				return this._ID_GV;
			}
			set
			{
				if ((this._ID_GV != value))
				{
					if (this._GIAOVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GVChanging(value);
					this.SendPropertyChanging();
					this._ID_GV = value;
					this.SendPropertyChanged("ID_GV");
					this.OnID_GVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHOA", DbType="NVarChar(50)")]
		public string ID_KHOA
		{
			get
			{
				return this._ID_KHOA;
			}
			set
			{
				if ((this._ID_KHOA != value))
				{
					if (this._KHOAHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHOAChanging(value);
					this.SendPropertyChanging();
					this._ID_KHOA = value;
					this.SendPropertyChanged("ID_KHOA");
					this.OnID_KHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_P", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_P
		{
			get
			{
				return this._ID_P;
			}
			set
			{
				if ((this._ID_P != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PChanging(value);
					this.SendPropertyChanging();
					this._ID_P = value;
					this.SendPropertyChanged("ID_P");
					this.OnID_PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOCVIEN", Storage="_HOCVIENs", ThisKey="ID_LOP", OtherKey="ID_LOP")]
		public EntitySet<HOCVIEN> HOCVIENs
		{
			get
			{
				return this._HOCVIENs;
			}
			set
			{
				this._HOCVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAOVIEN_LOP", Storage="_GIAOVIEN", ThisKey="ID_GV", OtherKey="ID_GV", IsForeignKey=true)]
		public GIAOVIEN GIAOVIEN
		{
			get
			{
				return this._GIAOVIEN.Entity;
			}
			set
			{
				GIAOVIEN previousValue = this._GIAOVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAOVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAOVIEN.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._GIAOVIEN.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._ID_GV = value.ID_GV;
					}
					else
					{
						this._ID_GV = default(string);
					}
					this.SendPropertyChanged("GIAOVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_LOP", Storage="_PHONG", ThisKey="ID_P", OtherKey="ID_P", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._ID_P = value.ID_P;
					}
					else
					{
						this._ID_P = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOAHOC_LOP", Storage="_KHOAHOC", ThisKey="ID_KHOA", OtherKey="ID_KHOA", IsForeignKey=true)]
		public KHOAHOC KHOAHOC
		{
			get
			{
				return this._KHOAHOC.Entity;
			}
			set
			{
				KHOAHOC previousValue = this._KHOAHOC.Entity;
				if (((previousValue != value) 
							|| (this._KHOAHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOAHOC.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._KHOAHOC.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._ID_KHOA = value.ID_KHOA;
					}
					else
					{
						this._ID_KHOA = default(string);
					}
					this.SendPropertyChanged("KHOAHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCVIENs(HOCVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_HOCVIENs(HOCVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOIDUNG")]
	public partial class NGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TAIKHOAN;
		
		private string _MATKHAU;
		
		private string _ID_LOAI;
		
		private EntitySet<HOCVIEN> _HOCVIENs;
		
		private EntityRef<PHANQUYEN> _PHANQUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnID_LOAIChanging(string value);
    partial void OnID_LOAIChanged();
    #endregion
		
		public NGUOIDUNG()
		{
			this._HOCVIENs = new EntitySet<HOCVIEN>(new Action<HOCVIEN>(this.attach_HOCVIENs), new Action<HOCVIEN>(this.detach_HOCVIENs));
			this._PHANQUYEN = default(EntityRef<PHANQUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOAI", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_LOAI
		{
			get
			{
				return this._ID_LOAI;
			}
			set
			{
				if ((this._ID_LOAI != value))
				{
					if (this._PHANQUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOAIChanging(value);
					this.SendPropertyChanging();
					this._ID_LOAI = value;
					this.SendPropertyChanged("ID_LOAI");
					this.OnID_LOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_HOCVIEN", Storage="_HOCVIENs", ThisKey="TAIKHOAN", OtherKey="TAIKHOAN")]
		public EntitySet<HOCVIEN> HOCVIENs
		{
			get
			{
				return this._HOCVIENs;
			}
			set
			{
				this._HOCVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_NGUOIDUNG", Storage="_PHANQUYEN", ThisKey="ID_LOAI", OtherKey="ID_LOAI", IsForeignKey=true)]
		public PHANQUYEN PHANQUYEN
		{
			get
			{
				return this._PHANQUYEN.Entity;
			}
			set
			{
				PHANQUYEN previousValue = this._PHANQUYEN.Entity;
				if (((previousValue != value) 
							|| (this._PHANQUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANQUYEN.Entity = null;
						previousValue.NGUOIDUNGs.Remove(this);
					}
					this._PHANQUYEN.Entity = value;
					if ((value != null))
					{
						value.NGUOIDUNGs.Add(this);
						this._ID_LOAI = value.ID_LOAI;
					}
					else
					{
						this._ID_LOAI = default(string);
					}
					this.SendPropertyChanged("PHANQUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCVIENs(HOCVIEN entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_HOCVIENs(HOCVIEN entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_LOAI;
		
		private string _TENLOAI;
		
		private EntitySet<NGUOIDUNG> _NGUOIDUNGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LOAIChanging(string value);
    partial void OnID_LOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._NGUOIDUNGs = new EntitySet<NGUOIDUNG>(new Action<NGUOIDUNG>(this.attach_NGUOIDUNGs), new Action<NGUOIDUNG>(this.detach_NGUOIDUNGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOAI", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_LOAI
		{
			get
			{
				return this._ID_LOAI;
			}
			set
			{
				if ((this._ID_LOAI != value))
				{
					this.OnID_LOAIChanging(value);
					this.SendPropertyChanging();
					this._ID_LOAI = value;
					this.SendPropertyChanged("ID_LOAI");
					this.OnID_LOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANQUYEN_NGUOIDUNG", Storage="_NGUOIDUNGs", ThisKey="ID_LOAI", OtherKey="ID_LOAI")]
		public EntitySet<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this._NGUOIDUNGs;
			}
			set
			{
				this._NGUOIDUNGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = this;
		}
		
		private void detach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.PHANQUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCVIEN")]
	public partial class HOCVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_HV;
		
		private string _HOTEN;
		
		private System.DateTime _NGAYSINH;
		
		private bool _GIOITINH;
		
		private System.DateTime _NGAYDANGKY;
		
		private string _EMAIL;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private string _NGHENGHIEP;
		
		private string _ID_LOP;
		
		private string _TAIKHOAN;
		
		private EntitySet<BIENLAI> _BIENLAIs;
		
		private EntitySet<KETQUA> _KETQUAs;
		
		private EntityRef<LOP> _LOP;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HVChanging(string value);
    partial void OnID_HVChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGAYSINHChanging(System.DateTime value);
    partial void OnNGAYSINHChanged();
    partial void OnGIOITINHChanging(bool value);
    partial void OnGIOITINHChanged();
    partial void OnNGAYDANGKYChanging(System.DateTime value);
    partial void OnNGAYDANGKYChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnNGHENGHIEPChanging(string value);
    partial void OnNGHENGHIEPChanged();
    partial void OnID_LOPChanging(string value);
    partial void OnID_LOPChanged();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    #endregion
		
		public HOCVIEN()
		{
			this._BIENLAIs = new EntitySet<BIENLAI>(new Action<BIENLAI>(this.attach_BIENLAIs), new Action<BIENLAI>(this.detach_BIENLAIs));
			this._KETQUAs = new EntitySet<KETQUA>(new Action<KETQUA>(this.attach_KETQUAs), new Action<KETQUA>(this.detach_KETQUAs));
			this._LOP = default(EntityRef<LOP>);
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_HV
		{
			get
			{
				return this._ID_HV;
			}
			set
			{
				if ((this._ID_HV != value))
				{
					this.OnID_HVChanging(value);
					this.SendPropertyChanging();
					this._ID_HV = value;
					this.SendPropertyChanged("ID_HV");
					this.OnID_HVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date NOT NULL")]
		public System.DateTime NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="Bit NOT NULL")]
		public bool GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDANGKY", DbType="Date NOT NULL")]
		public System.DateTime NGAYDANGKY
		{
			get
			{
				return this._NGAYDANGKY;
			}
			set
			{
				if ((this._NGAYDANGKY != value))
				{
					this.OnNGAYDANGKYChanging(value);
					this.SendPropertyChanging();
					this._NGAYDANGKY = value;
					this.SendPropertyChanged("NGAYDANGKY");
					this.OnNGAYDANGKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGHENGHIEP", DbType="NVarChar(50)")]
		public string NGHENGHIEP
		{
			get
			{
				return this._NGHENGHIEP;
			}
			set
			{
				if ((this._NGHENGHIEP != value))
				{
					this.OnNGHENGHIEPChanging(value);
					this.SendPropertyChanging();
					this._NGHENGHIEP = value;
					this.SendPropertyChanged("NGHENGHIEP");
					this.OnNGHENGHIEPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOP", DbType="NVarChar(50)")]
		public string ID_LOP
		{
			get
			{
				return this._ID_LOP;
			}
			set
			{
				if ((this._ID_LOP != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOPChanging(value);
					this.SendPropertyChanging();
					this._ID_LOP = value;
					this.SendPropertyChanged("ID_LOP");
					this.OnID_LOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="NVarChar(50)")]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_BIENLAI", Storage="_BIENLAIs", ThisKey="ID_HV", OtherKey="ID_HV")]
		public EntitySet<BIENLAI> BIENLAIs
		{
			get
			{
				return this._BIENLAIs;
			}
			set
			{
				this._BIENLAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCVIEN_KETQUA", Storage="_KETQUAs", ThisKey="ID_HV", OtherKey="ID_HV")]
		public EntitySet<KETQUA> KETQUAs
		{
			get
			{
				return this._KETQUAs;
			}
			set
			{
				this._KETQUAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOCVIEN", Storage="_LOP", ThisKey="ID_LOP", OtherKey="ID_LOP", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.HOCVIENs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.HOCVIENs.Add(this);
						this._ID_LOP = value.ID_LOP;
					}
					else
					{
						this._ID_LOP = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_HOCVIEN", Storage="_NGUOIDUNG", ThisKey="TAIKHOAN", OtherKey="TAIKHOAN", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.HOCVIENs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.HOCVIENs.Add(this);
						this._TAIKHOAN = value.TAIKHOAN;
					}
					else
					{
						this._TAIKHOAN = default(string);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BIENLAIs(BIENLAI entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = this;
		}
		
		private void detach_BIENLAIs(BIENLAI entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = null;
		}
		
		private void attach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = this;
		}
		
		private void detach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.HOCVIEN = null;
		}
	}
}
#pragma warning restore 1591
